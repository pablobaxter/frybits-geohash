version: 2.1

orbs:
  win: circleci/windows@2.4.0

jobs:

  Cache-Dependencies:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          name: Restoring Gradle cache
          keys:
            - v5-dependencies-{{ checksum "geohash/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v5-dependencies-

      - run:
          name: Download Depencies
          command: ./gradlew :geohash:dependencies

      - save_cache:
          name: Saving Gradle cache
          paths:
            - ~/.gradle
          key: v5-dependencies-{{ checksum "geohash/build.gradle" }}

  JVM-Test:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          name: Restoring Gradle cache
          keys:
            - v5-dependencies-{{ checksum "geohash/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v5-dependencies-

      # run tests!
      - run:
          name: Java Unit Tests
          command: ./gradlew jvmTest

      - store_test_results:
          path: geohash/build/test-results

  Javascript-Browser-Test:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk-node-browsers

    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      CHROME_BIN: "/usr/bin/google-chrome"

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          name: Restoring Gradle cache
          keys:
            - v5-dependencies-{{ checksum "geohash/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v5-dependencies-

      # run tests!
      - run:
          name: Javascript Browserify Unit Tests
          command: ./gradlew jsBrowserTest

      - store_test_results:
          path: geohash/build/test-results

  Javascript-Node-Test:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk-node

    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          name: Restoring Gradle cache
          keys:
            - v5-dependencies-{{ checksum "geohash/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v5-dependencies-

      # run tests!
      - run:
          name: Javascript Node Unit Tests
          command: ./gradlew jsNodeTest

      - store_test_results:
          path: geohash/build/test-results

  Linux-Native-Test:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          name: Restoring Gradle cache
          keys:
            - v5-dependencies-{{ checksum "geohash/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v5-dependencies-

      # run tests!
      - run:
          name: Linux Unit Tests
          command: ./gradlew linuxTest

      - store_test_results:
          path: geohash/build/test-results

  Windows-Native-Test:
    executor:
      name: win/default

    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          name: Restoring Gradle cache
          keys:
            - v5-dependencies-{{ checksum "geohash/build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v5-dependencies-

      # run tests!
      - run:
          name: Windows Unit Tests
          command: ./gradlew windowsTest
          shell: bash.exe

      - store_test_results:
          path: geohash/build/test-results

workflows:
  version: 2
  Tests:
    jobs:
      - Cache-Dependencies
      - JVM-Test:
          requires:
            - Cache-Dependencies
      - Javascript-Browser-Test:
          requires:
            - Cache-Dependencies
      - Javascript-Node-Test:
          requires:
            - Cache-Dependencies
      - Linux-Native-Test:
          requires:
            - Cache-Dependencies
      - Windows-Native-Test:
          requires:
            - Cache-Dependencies

